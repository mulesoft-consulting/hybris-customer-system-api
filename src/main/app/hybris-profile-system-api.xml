<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:hybris="http://www.mulesoft.org/schema/mule/hybris"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/hybris http://www.mulesoft.org/schema/mule/hybris/current/mule-hybris.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd">
	<http:listener-config name="hybris-profile-system-api-httpListenerConfig"
		host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration" />
	<hybris:trustedClient name="Hybris_OCC_Connector__Trusted_Client"
		clientId="${hybris.clientId}" clientSecret="${hybris.clientSecret}"
		address="${hybris.address}" tokenUrl="${hybris.tokenUrl}"
		doc:name="Hybris OCC Connector: Trusted Client" />
	<hybris:customerManager
		name="Hybris_OCC_Connector__Customer_or_Customer_Manager" userName="${hybris.userName}"
		password="${hybris.password}" address="${hybris.address}" tokenUrl="${hybris.tokenUrl}"
		clientId="${hybris.clientId}" clientSecret="${hybris.clientSecret}"
		doc:name="Hybris OCC Connector: Customer or Customer Manager" />
	<apikit:config name="hybris-profile-system-api-config"
		raml="hybris-profile-system-api.raml" consoleEnabled="false" doc:name="Router" />
	<flow name="hybris-profile-system-api-main">
		<http:listener config-ref="hybris-profile-system-api-httpListenerConfig"
			path="/api/*" doc:name="HTTP" />
		<apikit:router config-ref="hybris-profile-system-api-config"
			doc:name="APIkit Router" />
		<exception-strategy
			ref="hybris-profile-system-api-apiKitGlobalExceptionMapping"
			doc:name="Reference Exception Strategy" />
	</flow>
	<flow name="hybris-profile-system-api-console">
		<http:listener config-ref="hybris-profile-system-api-httpListenerConfig"
			path="/console/*" doc:name="HTTP" />
		<apikit:console config-ref="hybris-profile-system-api-config"
			doc:name="APIkit Console" />
	</flow>
	<flow name="get:/profile/{id}/orderHistory:hybris-profile-system-api-config">
        <hybris:get-order-history config-ref="Hybris_OCC_Connector__Trusted_Client" userId="#[message.inboundProperties.'http.uri.params'.id]" doc:name="Hybris OCC Connector"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json skipNullOn="everywhere"
---
"orders": payload]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
	</flow>
	<flow name="get:/profile/{id}:hybris-profile-system-api-config">
		<hybris:get-user config-ref="Hybris_OCC_Connector__Customer_or_Customer_Manager"
			userId="#[message.inboundProperties.'http.uri.params'.id]" doc:name="Hybris OCC Connector" />
        <dw:transform-message doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	hybrisId: payload.uid,
	fullName: payload.name,
	firstName: payload.firstName,
	lastName: payload.lastName,
	prefix: payload.title,
	currency: payload.currency.isocode,
	language: payload.language.name,
	phoneNumber: payload.defaultAddress.phone,
	primaryAddress: {
		addressId: payload.defaultAddress.id,
		companyName: payload.defaultAddress.companyName,
		addressLine1: payload.defaultAddress.line1,
		addressLine2: payload.defaultAddress.line2,
		city: payload.defaultAddress.town,
		state: payload.defaultAddress.region.isocode,
		zipCode: payload.defaultAddress.postalCode,
		country: payload.defaultAddress.country.isocode
	}	
}]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
	</flow>
	<apikit:mapping-exception-strategy
		name="hybris-profile-system-api-apiKitGlobalExceptionMapping">
		<apikit:mapping statusCode="404">
			<apikit:exception
				value="org.mule.module.apikit.exception.NotFoundException" />
			<set-property propertyName="Content-Type" value="application/json"
				doc:name="Property" />
			<set-payload
				value="{ &quot;message&quot;: &quot;Resource not found&quot; }"
				doc:name="Set Payload" />
		</apikit:mapping>
		<apikit:mapping statusCode="405">
			<apikit:exception
				value="org.mule.module.apikit.exception.MethodNotAllowedException" />
			<set-property propertyName="Content-Type" value="application/json"
				doc:name="Property" />
			<set-payload
				value="{ &quot;message&quot;: &quot;Method not allowed&quot; }"
				doc:name="Set Payload" />
		</apikit:mapping>
		<apikit:mapping statusCode="415">
			<apikit:exception
				value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
			<set-property propertyName="Content-Type" value="application/json"
				doc:name="Property" />
			<set-payload
				value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }"
				doc:name="Set Payload" />
		</apikit:mapping>
		<apikit:mapping statusCode="406">
			<apikit:exception
				value="org.mule.module.apikit.exception.NotAcceptableException" />
			<set-property propertyName="Content-Type" value="application/json"
				doc:name="Property" />
			<set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }"
				doc:name="Set Payload" />
		</apikit:mapping>
		<apikit:mapping statusCode="400">
			<apikit:exception
				value="org.mule.module.apikit.exception.BadRequestException" />
			<set-property propertyName="Content-Type" value="application/json"
				doc:name="Property" />
			<set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }"
				doc:name="Set Payload" />
		</apikit:mapping>
	</apikit:mapping-exception-strategy>
</mule>
