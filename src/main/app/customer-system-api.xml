<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:tls="http://www.mulesoft.org/schema/mule/tls" xmlns:api-platform-gw="http://www.mulesoft.org/schema/mule/api-platform-gw" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:hybris="http://www.mulesoft.org/schema/mule/hybris" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/hybris http://www.mulesoft.org/schema/mule/hybris/current/mule-hybris.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/api-platform-gw http://www.mulesoft.org/schema/mule/api-platform-gw/current/mule-api-platform-gw.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd">
    <http:listener-config name="customer-system-api-httpListenerConfig" host="0.0.0.0" port="8082" doc:name="HTTP Listener Configuration" protocol="HTTPS">
        <tls:context>
            <tls:key-store type="jks" path="keystore.jks" alias="mule" keyPassword="password" password="password"/>
        </tls:context>
    </http:listener-config>
    <apikit:config name="customer-system-api-config" raml="customer-system-api.raml" consoleEnabled="false" doc:name="Router" />
    <hybris:customerManager name="Hybris_OCC_Connector__Customer_or_Customer_Manager" userName="${hybris.userName}" password="${hybris.password}" address="${hybris.address}" tokenUrl="${hybris.tokenUrl}" clientId="${hybris.clientId}" clientSecret="${hybris.clientSecret}" doc:name="Hybris OCC Connector: Customer or Customer Manager" />
    <hybris:trustedClient name="Hybris_OCC_Connector__Trusted_Client" clientId="${hybris.clientId}" clientSecret="${hybris.clientSecret}" address="${hybris.address}" tokenUrl="${hybris.tokenUrl}" doc:name="Hybris OCC Connector: Trusted Client" />
    <api-platform-gw:api apiName="groupId:de6ca85b-7dfb-44bc-abb4-388e2dfad3d0:assetId:customer-system-api" version="v1.0:11767106" flowRef="customer-system-api-main" create="true" apikitRef="customer-system-api-config" doc:name="API Autodiscovery"/>
    <flow name="customer-system-api-main">
        <http:listener config-ref="customer-system-api-httpListenerConfig" path="/api/*" doc:name="HTTP" />
        <apikit:router config-ref="customer-system-api-config" doc:name="APIkit Router" />
        <exception-strategy ref="customer-system-api-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy" />
    </flow>
    <flow name="customer-system-api-console">
        <http:listener config-ref="customer-system-api-httpListenerConfig" path="/console/*" doc:name="HTTP" />
        <apikit:console config-ref="customer-system-api-config" doc:name="APIkit Console" />
    </flow>
    <flow name="get:/customer/{id}:customer-system-api-config">
        <hybris:get-user config-ref="Hybris_OCC_Connector__Customer_or_Customer_Manager" userId="#[message.inboundProperties.'http.uri.params'.id]" doc:name="Hybris_Customer_Manager_Get_User"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="3e934a5b-25e8-49b7-91e7-167f023b10e6">
            <dw:input-payload mimeType="application/json" />
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	id: payload.uid,
	firstName: payload.firstName,
	lastName: payload.lastName,
	prefix: payload.title,
	address: {
		addressId: payload.defaultAddress.id,
		addressLine1: payload.defaultAddress.line1,
		addressLine2: payload.defaultAddress.line2,
		city: payload.defaultAddress.town,
		zipCode: payload.defaultAddress.postalCode,
		state: payload.defaultAddress.region.isocode,
		country: payload.defaultAddress.country.isocode
	},
	phone: payload.defaultAddress.phone,
	email: payload.uid,
	currency: payload.currency.isocode,
	language: payload.language.isocode
}]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[payload]" level="INFO" doc:name="Logger" />
    </flow>
    <flow name="get:/customer/{id}/orderHistory:customer-system-api-config">
        <hybris:get-user config-ref="Hybris_OCC_Connector__Customer_or_Customer_Manager" userId="#[message.inboundProperties.'http.uri.params'.id]" doc:name="Hybris_Customer_Manager_Get_User"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <set-variable variableName="profileData" value="#[payload]" doc:name="Variable"/>
        <hybris:get-order-history config-ref="Hybris_OCC_Connector__Trusted_Client" userId="#[message.inboundProperties.'http.uri.params'.id]" doc:name="Hybris_Trusted_Client"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <dw:transform-message doc:name="Transform Message" metadata:id="a2863977-0186-4e81-8edf-2577a801e44a">
            <dw:input-payload mimeType="application/json"/>
            <dw:input-variable mimeType="application/json" variableName="profileData"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((payload01 , indexOfPayload01) -> {
	id: payload01.code,
	status: payload01.placed,
	statusDisplay: payload01.statusDisplay,
	currency: payload01.total.currencyIso,
	totalPrice: payload01.total.value,
	customerId: flowVars.profileData.uid,
	email: flowVars.profileData.uid,
	deliveryAddress: {
		addressId: flowVars.profileData.defaultAddress.id,
		addressLine1: flowVars.profileData.defaultAddress.line1,
		addressLine2: flowVars.profileData.defaultAddress.line2,
		city: flowVars.profileData.defaultAddress.town,
		postalCode: flowVars.profileData.defaultAddress.postalCode,
		state: flowVars.profileData.defaultAddress.region.isocode,
		country: flowVars.profileData.defaultAddress.country.isocode
	}
})]]></dw:set-payload>
        </dw:transform-message>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <apikit:mapping-exception-strategy name="customer-system-api-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property" />
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload" />
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
